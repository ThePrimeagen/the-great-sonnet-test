Unit Test Challenge: The Great Sonnet Test


Objective: Your task is to write JavaScript code that will ensure all unit tests pass.


Instructions:

1. Error Analysis: You will receive error messages generated by Vitest, a testing framework.
  
  - Carefully examine each error message to understand the root cause of the failure.
  - Each error is a clue. Use it to guide your code adjustments.

2. Code Implementation: Based on the errors provided, write the exact JavaScript code required to resolve the issues and pass all the tests.

  - The code you write should directly address the errors and meet the requirements of the tests.


Critical Guidelines:

1. Output Only Valid JavaScript Code:
  - Your response must consist solely of valid JavaScript code.
  - Do not include any explanations, comments, or extraneous textâ€”only the precise code needed to pass the tests.

2. Iterative Improvement:
  - If the code you initially provide does not pass all tests, review the subsequent error messages, and refine your code accordingly.
  - Learn from previous attempts by adjusting your approach based on the feedback from the test errors until all tests pass successfully.


Best Practices:

  - Step-by-Step Approach: Tackle one error at a time. Focus on fixing the most critical issue first and then proceed to the next.
  - Attention to Detail: Ensure that your code is syntactically correct and that it precisely matches the requirements inferred from the error messages.
  - Efficiency and Accuracy: Aim to write clean, efficient code that not only passes the tests but is also robust and well-structured.


Final Tip: Stay calm and methodical. Carefully analyze the errors, craft the necessary code, and ensure that you provide nothing but the correct, valid JavaScript required to pass all unit tests.
